<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>风海啸博客</title>
    <link>http://xiaohaoppy.daoapp.io/</link>
    <description>Recent content on 风海啸博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 28 May 2016 10:41:55 +0800</lastBuildDate>
    <atom:link href="http://xiaohaoppy.daoapp.io/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>kbengine视频教程</title>
      <link>http://xiaohaoppy.daoapp.io/post/kbengine%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 28 May 2016 10:41:55 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/kbengine%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B/</guid>
      <description>

&lt;h1 id=&#34;kbengine教程01-简单介绍与安装:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程01 简单介绍与安装&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1MTU0NTM4MA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程02-运行demo:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程02 运行demo&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1MTU0OTUzNg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程03-客户端登陆:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程03 客户端登陆&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1NDI0MTgwOA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程04-服务端配置:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程04 服务端配置&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1NDIyNDY2NA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程05-客户端与服务端交互:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程05 客户端与服务端交互&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1NjcxMDI4OA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程06-服务端与客户端交互:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程06 服务端与客户端交互&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM1NjA0MDYyOA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程07-演示:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程07 演示&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM2MTExMTE2OA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程08-请求创建角色:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程08 请求创建角色&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzM4NzMxMg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程09-角色信息1:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程09 角色信息1&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQwNjkyNA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;
  

&lt;h1 id=&#34;kbengine教程10-角色信息2:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程10 角色信息2&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQ0NTcxMg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程11-角色列表01:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程11 角色列表01&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQ3Mjk4OA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程12-角色列表02:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程12 角色列表02&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQ5MDA2NA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程13-角色列表03:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程13 角色列表03&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQ5MTU3Mg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程14-角色列表04:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程14 角色列表04&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzQ5OTEyMA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程15-角色列表05:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程15 角色列表05&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTM3MzUwNjExNg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程16-学习目标之角色列表:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程16 学习目标之角色列表&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTQwMzc0MTM3Mg==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  

&lt;h1 id=&#34;kbengine教程17-服务器导航网格生成:bc7107c3225c6f383a9441e83376cb22&#34;&gt;KBEngine教程17 服务器导航网格生成&lt;/h1&gt;

&lt;iframe height=498 width=510 src=&#34;http://player.youku.com/embed/XMTU2NDYxNTIyOA==&#34; frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;  
</description>
    </item>
    
    <item>
      <title>折腾一个kbengine云端开发环境</title>
      <link>http://xiaohaoppy.daoapp.io/post/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%AAkbengine%E4%BA%91%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 18 May 2016 10:39:13 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%AAkbengine%E4%BA%91%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;docker搭建cloud9 ide 并配置kbengine开发环境&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;随着云技术的发展，各种基于云端的IDE也相继出现。相比于传统的IDE，云端IDE可以让多个程序员同时在不同的设备上查看并编辑代码，大大提升工作协同和效率。
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;启动一个cloud9容器:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;启动一个cloud9容器&lt;/h1&gt;

&lt;p&gt;使用kdelfour/cloud9-docker镜像&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run -it -d -p 80:80 kdelfour/cloud9-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;浏览器访问&lt;a href=&#34;http://192.168.59.103:80&#34;&gt;http://192.168.59.103:80&lt;/a&gt;&lt;br /&gt;
&lt;img src=&#34;../img/cloud9_111.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;构建kbengine开发环境:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;构建kbengine开发环境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;观看docker镜像的构建文件，该镜像安装了build-essential g++ curl libssl-dev apache2-utils git libxml2-dev sshfs supervisor 继续配置kbe环境
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;apt-get update
apt-get install mysql-server mysql-client
apt-get install libmysqlclient-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;下载kbengine:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;下载kbengine&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git init
git remote add githubhttps https://github.com/kbengine/kbengine.git
git pull githubhttps master
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;编译kbengine:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;编译kbengine&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cd kbe/src
make
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置数据库:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;配置数据库&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;    mysql&amp;gt; create database kbe;
	mysql&amp;gt; use mysql 
	mysql&amp;gt; delete from user where user=&#39;&#39;; 
	mysql&amp;gt; FLUSH PRIVILEGES;
	mysql&amp;gt; grant all privileges on *.* to kbe@&#39;%&#39; identified by &#39;kbe&#39;;
	mysql&amp;gt; grant select,insert,update,delete,create,drop on *.* to kbe@&#39;%&#39; identified by &#39;kbe&#39;;
	mysql&amp;gt; FLUSH PRIVILEGES
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;启动kbengine服务器:a7124b968414ca8f1e9342ac201a3eda&#34;&gt;启动kbengine服务器&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cd assets/
sh start_server.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;最后效果&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&#34;../img/cloud9_222.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kbengine的web控制台镜像</title>
      <link>http://xiaohaoppy.daoapp.io/post/kbengine%E7%9A%84web%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%95%9C%E5%83%8F/</link>
      <pubDate>Mon, 16 May 2016 16:11:09 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/kbengine%E7%9A%84web%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%95%9C%E5%83%8F/</guid>
      <description>

&lt;h1 id=&#34;用法:2ee57b1f2323f1b9729b197646864e07&#34;&gt;用法&lt;/h1&gt;

&lt;h3 id=&#34;编译镜像:2ee57b1f2323f1b9729b197646864e07&#34;&gt;编译镜像&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;gir clone https://github.com/xiaohaoppy/kbe-wc.git

cd kbe-wc

docker build -t xiaohaoppy/kbe-wc .
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;启动镜像:2ee57b1f2323f1b9729b197646864e07&#34;&gt;启动镜像&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;docker run -p 8000 xiaohaoppy/kbe-wc
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>docker中编译ngrok</title>
      <link>http://xiaohaoppy.daoapp.io/post/docker%E4%B8%AD%E7%BC%96%E8%AF%91ngrok/</link>
      <pubDate>Sat, 16 Apr 2016 19:26:35 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/docker%E4%B8%AD%E7%BC%96%E8%AF%91ngrok/</guid>
      <description>

&lt;h1 id=&#34;使用官方golang镜像:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;使用官方golang镜像&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;docker run -i -t golang /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行完直接进入容器&lt;/p&gt;

&lt;h1 id=&#34;下载ngrok:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;下载ngrok&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cd /
git clone https://github.com/tutumcloud/ngrok.git /ngrok
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;编译ngrok:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;编译ngrok&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export GOPATH=/ngrok/
export NGROK_DOMAIN=&amp;quot;ngrok.me&amp;quot; #域名

openssl genrsa -out rootCA.key 2048 #生成密钥
openssl req -x509 -new -nodes -key rootCA.key -subj &amp;quot;/CN=$NGROK_DOMAIN&amp;quot; -days 5000 -out rootCA.pem
openssl genrsa -out server.key 2048
openssl req -new -key server.key -subj &amp;quot;/CN=$NGROK_DOMAIN&amp;quot; -out server.csr
openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 5000
cp rootCA.pem assets/client/tls/ngrokroot.crt
cp server.crt assets/server/tls/snakeoil.crt
cp server.key assets/server/tls/snakeoil.key
GOOS=windows GOARCH=amd64 make release-client release-server #编译 生成win版
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;退出容器导出:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;退出容器导出&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;docker cp &amp;lt;容器ID&amp;gt;:/ngrok/bin/windows_amd64/ /c/User/ngrok/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;修改host文件:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;修改host文件&lt;/h1&gt;

&lt;p&gt;添加 127.0.0.1    ngrok.me&lt;/p&gt;

&lt;h1 id=&#34;启动ngrokd:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;启动ngrokd&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;ngrokd -domain=&amp;quot;ngrok.me&amp;quot; -httpAddr=&amp;quot;:8080&amp;quot; -httpsAddr=&amp;quot;:8081&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试客户端:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;测试客户端&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;ngrok -config ngrok.cfg start baseapp loginapp
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试成功:c4b48cb8c94f77dcf8d07046d6ba9f41&#34;&gt;测试成功&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;ngrok                                                                                                                                                   (Ctrl+C to quit)

Tunnel Status                 online
Version                       1.7/1.7
Forwarding                    tcp://ngrok.me:30013 -&amp;gt; 127.0.0.1:30013
Forwarding                    tcp://ngrok.me:30015 -&amp;gt; 127.0.0.1:30015
Web Interface                 127.0.0.1:4040
# Conn                        0
Avg Conn Time                 0.00ms
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用反向链接搭建公网可访问的kbe服务</title>
      <link>http://xiaohaoppy.daoapp.io/post/%E4%BD%BF%E7%94%A8%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5%E6%90%AD%E5%BB%BA%E5%85%AC%E7%BD%91%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84kbe%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Thu, 14 Apr 2016 14:12:03 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/%E4%BD%BF%E7%94%A8%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5%E6%90%AD%E5%BB%BA%E5%85%AC%E7%BD%91%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84kbe%E6%9C%8D%E5%8A%A1/</guid>
      <description>

&lt;h1 id=&#34;ngrok-内网穿透利器:bbb754c3114ecee08038d32c7415911d&#34;&gt;Ngrok 内网穿透利器&lt;/h1&gt;

&lt;p&gt;ngrok 是一个反向代理，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放&lt;/p&gt;

&lt;p&gt;使用国内免费Ngrok &lt;a href=&#34;http://qydevv.com&#34;&gt;http://qydevv.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正式使用自行搭建ngrok服务器&lt;/p&gt;

&lt;p&gt;ngrok开源地址 &lt;a href=&#34;https://github.com/tutumcloud/ngrok&#34;&gt;https://github.com/tutumcloud/ngrok&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;开始部署:bbb754c3114ecee08038d32c7415911d&#34;&gt;开始部署&lt;/h1&gt;

&lt;p&gt;修改kbengine配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	&amp;lt;loginapp&amp;gt;
        &amp;lt;externalAddress&amp;gt; tunnel.qydev.com &amp;lt;/externalAddress&amp;gt;
        &amp;lt;externalPorts_min&amp;gt; 30013 &amp;lt;/externalPorts_min&amp;gt;		
                        			
		&amp;lt;externalPorts_max&amp;gt; 0 &amp;lt;/externalPorts_max&amp;gt;
	&amp;lt;/loginapp&amp;gt;	
    
    
    &amp;lt;baseapp&amp;gt;
		&amp;lt;backupPeriod&amp;gt; 500 &amp;lt;/backupPeriod&amp;gt;
        &amp;lt;externalAddress&amp;gt; tunnel.qydev.com &amp;lt;/externalAddress&amp;gt;
        &amp;lt;externalPorts_min&amp;gt; 30015 &amp;lt;/externalPorts_min&amp;gt;					 
		&amp;lt;externalPorts_max&amp;gt; 0 &amp;lt;/externalPorts_max&amp;gt;
	&amp;lt;/baseapp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ngrok配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server_addr: &amp;quot;tunnel.qydev.com:4443&amp;quot;
trust_host_root_certs: false
tunnels: 
  loginapp:
   remote_port: 30013 
   proto:
    tcp: 30013 
  baseapp: 
    remote_port: 30015
    proto:
      tcp: 30015

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;启动kbe:bbb754c3114ecee08038d32c7415911d&#34;&gt;启动kbe&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sh start_server.bat
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;启动ngrok:bbb754c3114ecee08038d32c7415911d&#34;&gt;启动ngrok&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;ngrok -config ngrok.cfg start baseapp loginapp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样外网就可以访问内网kbe服务了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kbe运行镜像</title>
      <link>http://xiaohaoppy.daoapp.io/post/kbe%E8%BF%90%E8%A1%8C%E9%95%9C%E5%83%8F/</link>
      <pubDate>Thu, 14 Apr 2016 11:37:04 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/kbe%E8%BF%90%E8%A1%8C%E9%95%9C%E5%83%8F/</guid>
      <description>

&lt;h1 id=&#34;镜像地址:091568a9ec46ad4d8d09b6399a30aff5&#34;&gt;镜像地址&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaohaoppy/kbe_server&#34;&gt;https://github.com/xiaohaoppy/kbe_server&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;用途:091568a9ec46ad4d8d09b6399a30aff5&#34;&gt;用途&lt;/h1&gt;

&lt;p&gt;一台服务器部署多组kbe服务&lt;/p&gt;

&lt;p&gt;可以使用该镜像分布式部署kbe&lt;/p&gt;

&lt;h1 id=&#34;用法:091568a9ec46ad4d8d09b6399a30aff5&#34;&gt;用法&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; git clone https://github.com/xiaohaoppy/kbe_server.git
 cd kbe_server
 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用编译镜像编译kbehttps://github.com/xiaohaoppy/KBE_BUILD_EVN&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; docker run xiaohaoppy/KBE_BUILD_EVN
 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;等待编译完成 拷贝出编译的文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; docker cp &amp;lt;编译镜像容器的ID&amp;gt;：/kbengine/kbe/bin /kbengine/kbe/bin
 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; assets\scripts/下放入自己的额脚本逻辑
 
 assets\res\server/kbengine.xml 修改配置文件 该容器里没有数据库需要自己配置数据库，并且配置对外ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;build镜像:091568a9ec46ad4d8d09b6399a30aff5&#34;&gt;build镜像&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt; docker build xiaohaoppy/kbe-server .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;启动镜像:091568a9ec46ad4d8d09b6399a30aff5&#34;&gt;启动镜像&lt;/h2&gt;

&lt;p&gt;-u 为设置容器的UID -p 映射端口  -i -t 启动个伪终端&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; docker run -t -i -p 20013:20013 -P 20015:20015 -P 20016:20016 -p 20017:20017 -u 1000 xiaohaoppy/kbe-server /bin/bash
 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在容器里执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cd /kbengine/assets
 
 sh start_server.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动kbe完成&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kbe编译镜像</title>
      <link>http://xiaohaoppy.daoapp.io/post/kbe%E7%BC%96%E8%AF%91%E9%95%9C%E5%83%8F/</link>
      <pubDate>Thu, 14 Apr 2016 11:36:45 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/kbe%E7%BC%96%E8%AF%91%E9%95%9C%E5%83%8F/</guid>
      <description>

&lt;h1 id=&#34;镜像地址:d19eaa930cac8fed3ce150af40ccd836&#34;&gt;镜像地址&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaohaoppy/KBE_BUILD_EVN&#34;&gt;https://github.com/xiaohaoppy/KBE_BUILD_EVN&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;如何使用:d19eaa930cac8fed3ce150af40ccd836&#34;&gt;如何使用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;gir clone https://github.com/xiaohaoppy/KBE_BUILD_EVN.git

cd KBE_BUILD_EVN

docker build -t xiaohaoppy/kbe-build-env .

docker run -v /home/kbengine/kbe/bin:/kbengine/kbe/bin xiaohaoppy/kbe-build-env
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>搭建博客</title>
      <link>http://xiaohaoppy.daoapp.io/post/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 14 Apr 2016 11:07:45 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>

&lt;p&gt;博客是hugo生成。&lt;br /&gt;
Hugo是一个用Go语言编写的静态网站生成器，它使用起来非常简单，相对于Jekyll复杂的安装设置来说，Hugo仅需要一个二进制文件hugo(hugo.exe)即可轻松用于本地调试和生成静态页面。&lt;/p&gt;

&lt;h2 id=&#34;hugo官方网站:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;hugo官方网站&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;本博客项目地址:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;本博客项目地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaohaoppy/xiaohaoppy-hugo-blog&#34;&gt;https://github.com/xiaohaoppy/xiaohaoppy-hugo-blog&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;博客使用模板地址:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;博客使用模板地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/coderzh/hugo-pacman-theme&#34;&gt;https://github.com/coderzh/hugo-pacman-theme&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;生成静态网站地址:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;生成静态网站地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaohaoppy/myblog&#34;&gt;https://github.com/xiaohaoppy/myblog&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;部署镜像地址:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;部署镜像地址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/xiaohaoppy/daocloud-blog&#34;&gt;https://github.com/xiaohaoppy/daocloud-blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;镜像使用caddy部署，是个静态网站服务器。&lt;/p&gt;

&lt;p&gt;服务启动自动git clone你的静态网站并且每隔一段时间自动git pull&lt;/p&gt;

&lt;p&gt;配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0.0.0.0:2015 {
    root /public
    git https://github.com/xiaohaoppy/myblog.git / {
        interval 60
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;部署在:355ce35de1283acdf5dc7c877fad7c29&#34;&gt;部署在&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.daocloud.io/&#34;&gt;https://www.daocloud.io/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第一篇博客</title>
      <link>http://xiaohaoppy.daoapp.io/post/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 14 Apr 2016 11:05:39 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/post/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;对你大声的呼喊“哈喽，世界”&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&#34;logo.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>http://xiaohaoppy.daoapp.io/about/</link>
      <pubDate>Wed, 13 Apr 2016 13:25:20 +0800</pubDate>
      
      <guid>http://xiaohaoppy.daoapp.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>